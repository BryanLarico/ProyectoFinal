# Generated by Django 5.0.6 on 2024-07-27 23:49

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(max_length=100, unique=True, verbose_name='Nombre de usuario')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Correo Electr√≥nico')),
                ('user_type', models.CharField(choices=[('admin', 'Teacher'), ('client', 'Student')], default='client', max_length=15)),
                ('name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Nombres')),
                ('dni', models.CharField(blank=True, max_length=20, null=True)),
                ('registration_date', models.DateField(auto_now_add=True)),
                ('usuario_activo', models.BooleanField(default=True)),
                ('usuario_teacher', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Career',
            fields=[
                ('idCareer', models.AutoField(primary_key=True, serialize=False)),
                ('nameCareer', models.CharField(max_length=100, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('id_user_created', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='career_created', to=settings.AUTH_USER_MODEL)),
                ('id_user_modified', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='career_modified', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Career',
                'verbose_name_plural': 'Careers',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('idCourse', models.IntegerField(primary_key=True, serialize=False, unique=True)),
                ('nameCourse', models.CharField(max_length=100, unique=True)),
                ('credit', models.IntegerField(null=True)),
                ('prerequisite', models.IntegerField(blank=True, null=True)),
                ('semester', models.IntegerField(null=True)),
                ('laboratory', models.BooleanField(blank=True, null=True)),
                ('hoursTeory', models.IntegerField(blank=True, null=True)),
                ('hoursPractice', models.IntegerField(blank=True, null=True)),
                ('p1', models.IntegerField(null=True)),
                ('p2', models.IntegerField(null=True)),
                ('p3', models.IntegerField(null=True)),
                ('e1', models.IntegerField(null=True)),
                ('e2', models.IntegerField(null=True)),
                ('e3', models.IntegerField(null=True)),
                ('status', models.BooleanField(null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('id_user_created', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='course_created', to=settings.AUTH_USER_MODEL)),
                ('id_user_modified', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='course_modified', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('idEvent', models.AutoField(primary_key=True, serialize=False)),
                ('amountEvent', models.IntegerField()),
                ('percentageProgress', models.FloatField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('percentageExam', models.FloatField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('idCourse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.course')),
                ('id_user_created', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='event_created', to=settings.AUTH_USER_MODEL)),
                ('id_user_modified', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='event_modified', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Registration',
            fields=[
                ('idRegistration', models.AutoField(primary_key=True, serialize=False)),
                ('semester', models.IntegerField()),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('id_user_created', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='registration_created', to=settings.AUTH_USER_MODEL)),
                ('id_user_modified', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='registration_modified', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Registration',
                'verbose_name_plural': 'Registrations',
            },
        ),
        migrations.CreateModel(
            name='Grades',
            fields=[
                ('idGrades', models.AutoField(primary_key=True, serialize=False)),
                ('progress', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)])),
                ('exam', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)])),
                ('average', models.IntegerField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)])),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('idEvent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.event')),
                ('id_user_created', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='grades_created', to=settings.AUTH_USER_MODEL)),
                ('id_user_modified', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='grades_modified', to=settings.AUTH_USER_MODEL)),
                ('idRegistration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.registration')),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C')], default='A', max_length=1)),
                ('capacity', models.PositiveIntegerField(default=20)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.course')),
                ('id_user_created', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='section_created', to=settings.AUTH_USER_MODEL)),
                ('id_user_modified', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='section_modified', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['course__nameCourse', 'group', 'capacity'],
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('idStudent', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(max_length=128)),
                ('name', models.CharField(max_length=255)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('career', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.career')),
                ('id_user_created', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='student_created', to=settings.AUTH_USER_MODEL)),
                ('id_user_modified', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='student_modified', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Student',
                'verbose_name_plural': 'Students',
            },
        ),
        migrations.AddField(
            model_name='registration',
            name='student',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.student'),
        ),
        migrations.CreateModel(
            name='CourseGradesStudent',
            fields=[
                ('idCourseGradesStudent', models.AutoField(primary_key=True, serialize=False)),
                ('finalGrade', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)])),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('idCourse', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.course')),
                ('id_user_created', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='course_created_grades_students', to=settings.AUTH_USER_MODEL)),
                ('id_user_modified', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='course_modified_grades_students', to=settings.AUTH_USER_MODEL)),
                ('idStudent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.student')),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('idTeacher', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(max_length=128)),
                ('name', models.CharField(max_length=255)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now=True)),
                ('id_user_created', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='teacher_created', to=settings.AUTH_USER_MODEL)),
                ('id_user_modified', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='teacher_modified', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Teacher',
                'verbose_name_plural': 'Teachers',
            },
        ),
        migrations.CreateModel(
            name='UnitReport',
            fields=[
                ('idUnitReport', models.AutoField(primary_key=True, serialize=False)),
                ('eval_cont1', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)])),
                ('parcial1', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)])),
                ('eval_cont2', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)])),
                ('parcial2', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)])),
                ('eval_cont3', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)])),
                ('parcial3', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)])),
                ('idCourse', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.course')),
                ('idStudent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.student')),
            ],
        ),
        migrations.AddConstraint(
            model_name='grades',
            constraint=models.CheckConstraint(check=models.Q(('progress__gte', 0), ('progress__lte', 20)), name='progress_range'),
        ),
        migrations.AddConstraint(
            model_name='grades',
            constraint=models.CheckConstraint(check=models.Q(('exam__gte', 0), ('exam__lte', 20)), name='exam_range'),
        ),
        migrations.AddConstraint(
            model_name='grades',
            constraint=models.CheckConstraint(check=models.Q(('average__gte', 0), ('average__lte', 20)), name='average_range'),
        ),
        migrations.AddConstraint(
            model_name='section',
            constraint=models.UniqueConstraint(fields=('course', 'group'), name='unique_workload'),
        ),
    ]
